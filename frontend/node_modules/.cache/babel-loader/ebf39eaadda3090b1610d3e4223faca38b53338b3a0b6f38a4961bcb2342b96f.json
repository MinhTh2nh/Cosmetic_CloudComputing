{"ast":null,"code":"import { toast } from \"react-toastify\";\nconst initialState = {\n  // if after login token haven't got from reducer, we can make condition to transfer the token with action.payload if they can't get\n  tokenAdmin: localStorage.getItem(\"token-admin\"),\n  tokenUser: localStorage.getItem(\"token-user\"),\n  // alert for login feedbacks\n  alert: {\n    show: false,\n    message: \"\",\n    variant: \"light\"\n  },\n  // only for register success\n  registerSuccessToastifyNotif: {\n    show: false,\n    message: \"\",\n    variant: \"\"\n  },\n  // for form control feedback. (react bootstrap)\n  formControlError: {\n    username: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    password: \"\"\n  }\n};\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ADMIN_FAILED\":\n      return {\n        ...state,\n        alert: {\n          show: true,\n          message: action.payload,\n          variant: \"danger\"\n        }\n      };\n    case \"LOGIN_ADMIN_SUCCESS\":\n      localStorage.setItem(\"token-admin\", action.payload);\n      return {\n        ...state,\n        tokenAdmin: action.payload\n      };\n    case \"LOGIN_USER_FAILED\":\n      return {\n        ...state,\n        alert: {\n          show: true,\n          message: action.payload,\n          variant: \"danger\"\n        }\n      };\n    case \"LOGIN_USER_SUCCESS\":\n      localStorage.setItem(\"token-user\", action.payload);\n      toast.success(\"You've successfully login!\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n      return {\n        ...state,\n        tokenUser: action.payload\n      };\n    case \"REGISTER_USER_SUCCESS\":\n      return {\n        ...state,\n        registerSuccessToastifyNotif: {\n          show: true,\n          message: action.payload,\n          variant: \"success\"\n        }\n      };\n    case \"REGISTER_USER_FAIL\":\n      return {\n        ...state,\n        formControlError: {\n          ...state.error,\n          ...action.payload\n        }\n      };\n    case \"REGISTER_USER_INVALID\":\n      return {\n        ...state,\n        alert: {\n          show: true,\n          message: action.payload,\n          variant: \"danger\"\n        }\n      };\n    case \"LOGOUT_USER\":\n      localStorage.removeItem(\"token-user\");\n      toast.error(\"You've successfully logout!\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n      return {\n        ...state,\n        tokenUser: \"\"\n      };\n    default:\n      return state;\n  }\n};\nexport default loginReducer;","map":{"version":3,"names":["toast","initialState","tokenAdmin","localStorage","getItem","tokenUser","alert","show","message","variant","registerSuccessToastifyNotif","formControlError","username","email","phoneNumber","password","loginReducer","state","action","type","payload","setItem","success","position","POSITION","TOP_CENTER","error","removeItem"],"sources":["C:/Users/Quang/Documents/quachvinhquang/1st-semester_2023-2024/Cloud Computing/Cosmetic/Cosmetic_CloudComputing/frontend/src/reducers/LoginReducer.js"],"sourcesContent":["import { toast } from \"react-toastify\";\r\nconst initialState = {\r\n  // if after login token haven't got from reducer, we can make condition to transfer the token with action.payload if they can't get\r\n  tokenAdmin: localStorage.getItem(\"token-admin\"),\r\n  tokenUser: localStorage.getItem(\"token-user\"),\r\n\r\n  // alert for login feedbacks\r\n  alert: {\r\n    show: false,\r\n    message: \"\",\r\n    variant: \"light\",\r\n  },\r\n  // only for register success\r\n  registerSuccessToastifyNotif: {\r\n    show: false,\r\n    message: \"\",\r\n    variant: \"\",\r\n  },\r\n  // for form control feedback. (react bootstrap)\r\n  formControlError: {\r\n    username: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n  },\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ADMIN_FAILED\":\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          show: true,\r\n          message: action.payload,\r\n          variant: \"danger\",\r\n        },\r\n      };\r\n\r\n    case \"LOGIN_ADMIN_SUCCESS\":\r\n      localStorage.setItem(\"token-admin\", action.payload);\r\n      return {\r\n        ...state,\r\n        tokenAdmin: action.payload,\r\n      };\r\n\r\n    case \"LOGIN_USER_FAILED\":\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          show: true,\r\n          message: action.payload,\r\n          variant: \"danger\",\r\n        },\r\n      };\r\n\r\n    case \"LOGIN_USER_SUCCESS\":\r\n      localStorage.setItem(\"token-user\", action.payload);\r\n      toast.success(\"You've successfully login!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return {\r\n        ...state,\r\n        tokenUser: action.payload,\r\n      };\r\n\r\n    case \"REGISTER_USER_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        registerSuccessToastifyNotif: {\r\n          show: true,\r\n          message: action.payload,\r\n          variant: \"success\",\r\n        },\r\n      };\r\n\r\n    case \"REGISTER_USER_FAIL\":\r\n      return {\r\n        ...state,\r\n        formControlError: {\r\n          ...state.error,\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case \"REGISTER_USER_INVALID\":\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          show: true,\r\n          message: action.payload,\r\n          variant: \"danger\",\r\n        },\r\n      };\r\n\r\n    case \"LOGOUT_USER\":\r\n      localStorage.removeItem(\"token-user\");\r\n      toast.error(\"You've successfully logout!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return {\r\n        ...state,\r\n        tokenUser: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,MAAMC,YAAY,GAAG;EACnB;EACAC,UAAU,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAC/CC,SAAS,EAAEF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAE7C;EACAE,KAAK,EAAE;IACLC,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC;EACD;EACAC,4BAA4B,EAAE;IAC5BH,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC;EACD;EACAE,gBAAgB,EAAE;IAChBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGhB,YAAY,EAAEiB,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGF,KAAK;QACRX,KAAK,EAAE;UACLC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAEU,MAAM,CAACE,OAAO;UACvBX,OAAO,EAAE;QACX;MACF,CAAC;IAEH,KAAK,qBAAqB;MACxBN,YAAY,CAACkB,OAAO,CAAC,aAAa,EAAEH,MAAM,CAACE,OAAO,CAAC;MACnD,OAAO;QACL,GAAGH,KAAK;QACRf,UAAU,EAAEgB,MAAM,CAACE;MACrB,CAAC;IAEH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGH,KAAK;QACRX,KAAK,EAAE;UACLC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAEU,MAAM,CAACE,OAAO;UACvBX,OAAO,EAAE;QACX;MACF,CAAC;IAEH,KAAK,oBAAoB;MACvBN,YAAY,CAACkB,OAAO,CAAC,YAAY,EAAEH,MAAM,CAACE,OAAO,CAAC;MAClDpB,KAAK,CAACsB,OAAO,CAAC,4BAA4B,EAAE;QAC1CC,QAAQ,EAAEvB,KAAK,CAACwB,QAAQ,CAACC;MAC3B,CAAC,CAAC;MACF,OAAO;QACL,GAAGR,KAAK;QACRZ,SAAS,EAAEa,MAAM,CAACE;MACpB,CAAC;IAEH,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGH,KAAK;QACRP,4BAA4B,EAAE;UAC5BH,IAAI,EAAE,IAAI;UACVC,OAAO,EAAEU,MAAM,CAACE,OAAO;UACvBX,OAAO,EAAE;QACX;MACF,CAAC;IAEH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGQ,KAAK;QACRN,gBAAgB,EAAE;UAChB,GAAGM,KAAK,CAACS,KAAK;UACd,GAAGR,MAAM,CAACE;QACZ;MACF,CAAC;IAEH,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGH,KAAK;QACRX,KAAK,EAAE;UACLC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAEU,MAAM,CAACE,OAAO;UACvBX,OAAO,EAAE;QACX;MACF,CAAC;IAEH,KAAK,aAAa;MAChBN,YAAY,CAACwB,UAAU,CAAC,YAAY,CAAC;MACrC3B,KAAK,CAAC0B,KAAK,CAAC,6BAA6B,EAAE;QACzCH,QAAQ,EAAEvB,KAAK,CAACwB,QAAQ,CAACC;MAC3B,CAAC,CAAC;MACF,OAAO;QACL,GAAGR,KAAK;QACRZ,SAAS,EAAE;MACb,CAAC;IAEH;MACE,OAAOY,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}